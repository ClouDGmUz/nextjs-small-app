(()=>{var e={};e.id=297,e.ids=[297],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},618:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>m,routeModule:()=>d,serverHooks:()=>x,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var s={};t.r(s),t.d(s,{PATCH:()=>u});var a=t(2706),o=t(8203),i=t(5994),n=t(9187),p=t(5600);async function u(e,r){try{let{id:t}=await r.params,{status:s,notes:a}=await e.json();if(!s&&!a)return n.NextResponse.json({error:"Status or notes are required"},{status:400});let o=await p.z.preOrder.update({where:{id:t},data:{...s&&{status:s},...a&&{notes:a}}});return n.NextResponse.json(o)}catch(e){return n.NextResponse.json({error:"Failed to update pre-order"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/pre-orders/[id]/route",pathname:"/api/pre-orders/[id]",filename:"route",bundlePath:"app/api/pre-orders/[id]/route"},resolvedPagePath:"D:\\dev\\Node\\NextJS\\webapp\\src\\app\\api\\pre-orders\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:x}=d;function m(){return(0,i.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},6487:()=>{},8335:()=>{},5600:(e,r,t)=>{"use strict";t.d(r,{z:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,452],()=>t(618));module.exports=s})();